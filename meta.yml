---
fullname: ProofChat
shortname: proofchat
organization: CharlesAverill
community: false
action: true
coqdoc: true
coqdoc_index: 'docs/latest/coqdoc/toc.html'

synopsis: A verified TCP client/server chat application

description: |-
  This project contains a verified TCP client/server chat application written in
  Coq, with extraction procedures to OCaml. All networking is accomplished through
  the builtin OCaml Unix library.

authors:
- name: Charles Averill
  initial: true
  orcid: 0000-0001-6614-1808

maintainers:
- name: Charles Averill
  nickname: CharlesAverill

license:
  fullname: MIT License
  identifier: MIT

supported_coq_versions:
  text: 8.19.1 or later
  opam: '{(>= "8.19.1")}'

tested_coq_opam_versions:
- version: '8.19.1'

keywords:
- name: TCP

documentation: |-
  ## To extract

  Simply run `make` in the root directory to compile the contents of [theories](theories).

  The extracted contents are placed in [proofchat](proofchat).
  Here, run `dune build` to compile OCaml binaries for the client and server.

  The client and server can be started via `dune exec proofchat.client`
  and `dune exec proofchat.server`, respectively.

  ## Verification

  To be approached. I'm mostly going to target the involution of my serialization
  and deserialization routines.
---
